{"version":3,"sources":["components/SeedSelector/cross.svg","components/SearchBar/arrowleft.svg","components/SearchBar/SearchBar.tsx","components/TrackListItem/TrackListItem.tsx","components/Checkbox/Checkbox.tsx","components/SeedSelector/SeedSelector.tsx","store/seedtrack/actions.ts","store/seedtrack/types.ts","components/VerticalSlider/Mark/Mark.tsx","components/VerticalSlider/VerticalSlider.tsx","components/Parameters/Parameters.tsx","store/parameter/actions.ts","store/parameter/types.ts","spotify/Spotify.ts","components/Playlist/Playlist.tsx","store/authentication/actions.ts","store/authentication/types.ts","common/utils.ts","components/SpotifyLogin/SpotifyLogin.tsx","components/App/App.tsx","store/seedtrack/reducers.ts","store/parameter/reducers.ts","store/authentication/reducers.ts","store/index.ts","index.tsx"],"names":["module","exports","SearchBar","onQueryChanged","React","useState","value","setValue","cancelSearchButtonClass","classNames","hidden","length","className","type","placeholder","maxLength","onChange","event","target","onClick","src","ArrowIcon","alt","TrackListItem","artists","track","icon","coverImageUrl","album","images","reduce","acc","curr","width","url","name","splice","Checkbox","id","checked","onCheckedChanged","SpotifyApi","SpotifyWebApi","connect","state","seedTracks","authentication","selectTrack","payload","deselectTrack","tracks","setTracks","setAccessToken","accessToken","handleQueryChanged","query","a","searchTracks","response","items","handleCheckedChange","classNameDropdown","slice","map","t","key","some","e","CrossIcon","makeStyle","height","railHeight","offsetX","position","bottom","left","Mark","style","Slider","min","max","step","markValues","dimension","setDimension","inputRef","useRef","movementTimer","updateDimensions","current","clientWidth","clientHeight","useLayoutEffect","window","addEventListener","clearInterval","setTimeout","ref","markWidth","index","ratio","currentHeight","offset","THUMB_WIDTH","renderMarks","parameters","updateParameters","onParameterChange","prop","newParams","tempoVariance","danceability","energy","popularity","valence","Object","assign","parseInt","parseFloat","generatePlaylist","Promise","r","spotifyApi","getAudioFeaturesForTracks","trackAnalyses","audio_features","Error","averageBpm","tempo","recommendationOptions","seed_tracks","min_tempo","max_tempo","target_tempo","target_danceability","target_energy","target_popularity","target_valence","getRecommendations","recommendationResponse","getTracks","trackResponse","addPlaylist","getMe","user","createPlaylist","description","addTracksToPlaylist","uri","Spinner","setState","isGenerating","setGenerating","canGenerate","canAddPlaylist","disabled","then","catch","playlistName","prompt","alert","authenticationSuccess","expiresIn","dispatch","clientId","scopes","redirectUri","useEffect","location","href","indexOf","params","paramString","split","toParams","substring","history","replaceState","isAuthenticated","client_id","response_type","scope","join","redirect_uri","AUTHORIZATION_URL","entries","entry","encodeURI","toQuery","SCOPES","App","Fragment","initialState","rootReducer","combineReducers","action","filter","store","middlewares","thunkMiddleware","middlewareEnhancer","applyMiddleware","createStore","composeWithDevTools","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04336d59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cross.cad70081.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowleft.6468634d.svg\";","import React from \"react\";\n\nimport \"./SearchBar.css\";\nimport \"../../index.css\";\n\nimport ArrowIcon from \"./arrowleft.svg\";\nimport classNames from \"classnames\";\n\ninterface SearchBarProps {\n  onQueryChanged: (query: string) => void;\n}\n\nconst SearchBar: React.FC<SearchBarProps> = ({ onQueryChanged }) => {\n  const [value, setValue] = React.useState(\"\");\n\n  const onValueChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onQueryChanged(event.target.value);\n    setValue(event.target.value);\n  };\n\n  const onSearchCancelClicked = () => {\n    onQueryChanged(\"\");\n    setValue(\"\");\n  };\n\n  const cancelSearchButtonClass = classNames(\"cancel-search-button\", {\n    hidden: value.length === 0,\n  });\n\n  return (\n    <div className=\"searchbar\">\n      <input\n        className=\"searchbar-input\"\n        type=\"text\"\n        placeholder=\"Search for Songs\"\n        maxLength={80}\n        value={value}\n        onChange={onValueChanged}\n      />\n      <div className=\"searchbar-icons\">\n        <button\n          className={cancelSearchButtonClass}\n          onClick={onSearchCancelClicked}\n        >\n          <img src={ArrowIcon} alt=\"Magnifying glass\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { ReactNode } from \"react\";\nimport \"spotify-web-api-js\";\n\nimport \"./TrackListItem.css\";\n\ninterface TrackListItemProps {\n  track: SpotifyApi.TrackObjectFull;\n  icon?: ReactNode;\n}\n\nconst artistsToString = (artists: SpotifyApi.ArtistObjectSimplified[]) => {\n  return artists\n    .splice(1)\n    .reduce(\n      (acc: string, curr: SpotifyApi.ArtistObjectSimplified) =>\n        acc + \", \" + curr.name,\n      artists[0].name\n    );\n};\n\nconst TrackListItem: React.FC<TrackListItemProps> = ({ track, icon }) => {\n  const coverImageUrl = track.album.images.reduce(\n    (acc: SpotifyApi.ImageObject, curr: SpotifyApi.ImageObject) =>\n      // @ts-ignore\n      curr.width < acc.width ? curr : acc\n  );\n\n  return (\n    <li className=\"track-item\">\n      <div className=\"track-description\">\n        <div className=\"track-cover\">\n          <img\n            width={48}\n            src={coverImageUrl.url}\n            alt={\"Cover of album \" + track.album.name}\n          />\n        </div>\n        <div className=\"track-info\">\n          <h4 className=\"track-name\">{track.name}</h4>\n          <p className=\"track-album\">\n            {artistsToString(track.artists)} • {track.album.name}\n          </p>\n        </div>\n      </div>\n      <div className=\"track-icon\">{icon}</div>\n    </li>\n  );\n};\n\nexport default TrackListItem;\n","import React from \"react\";\n\nimport \"./Checkbox.css\";\n\ninterface CheckboxProps {\n  id: string;\n  checked: boolean;\n  onCheckedChanged: (checked: boolean) => void;\n}\n\nconst Checkbox: React.FC<CheckboxProps> = ({\n  id,\n  checked,\n  onCheckedChanged,\n}) => {\n  return (\n    <input\n      className=\"round-checkbox\"\n      type=\"checkbox\"\n      id={id}\n      checked={checked}\n      onChange={(event) => onCheckedChanged(event.target.checked)}\n    />\n  );\n};\n\nexport default Checkbox;\n","import React from \"react\";\n\nimport \"./SeedSelector.css\";\nimport \"../App/App.css\";\n\nimport CrossIcon from \"./cross.svg\";\nimport SearchBar from \"../SearchBar/SearchBar\";\n\nimport \"spotify-web-api-js\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport TrackListItem from \"../TrackListItem/TrackListItem\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport { AppState } from \"../../store\";\nimport { SeedTrackState } from \"../../store/seedtrack/types\";\nimport { deselectTrack, selectTrack } from \"../../store/seedtrack/actions\";\nimport { connect } from \"react-redux\";\nimport { AuthenticationState } from \"../../store/authentication/types\";\n\nconst TRACKS_DISPLAYED = 5;\n\nconst SpotifyApi = new SpotifyWebApi();\n\ninterface SeedSelectorProps {\n  selectTrack: typeof selectTrack;\n  deselectTrack: typeof deselectTrack;\n  seedTracks: SeedTrackState;\n  authentication: AuthenticationState;\n}\n\nconst SeedSelector: React.FC<SeedSelectorProps> = ({\n  selectTrack,\n  deselectTrack,\n  seedTracks,\n  authentication,\n}) => {\n  const [tracks, setTracks] = React.useState<SpotifyApi.TrackObjectFull[]>([]);\n\n  SpotifyApi.setAccessToken(authentication.accessToken);\n\n  const handleQueryChanged = async (query: string) => {\n    if (query.length === 0) {\n      setTracks([]);\n      return;\n    }\n\n    const response = await SpotifyApi.searchTracks(query);\n    setTracks(response.tracks.items);\n  };\n\n  const handleCheckedChange = (\n    track: SpotifyApi.TrackObjectFull,\n    checked: boolean\n  ) => {\n    if (checked) {\n      selectTrack(track);\n    } else {\n      deselectTrack(track.id);\n    }\n  };\n\n  const classNameDropdown = tracks.length === 0 ? \"hide\" : \"show\";\n\n  return (\n    <div>\n      <div className=\"seed-selector\">\n        <h2 className=\"section-title\">Step 2: Select seed songs</h2>\n        <div className=\"searchbar-wrapper\">\n          <SearchBar onQueryChanged={handleQueryChanged} />\n        </div>\n        <div className=\"search-results\">\n          <div className={\"search-results-dropdown \" + classNameDropdown}>\n            {tracks.slice(0, TRACKS_DISPLAYED).map((t) => (\n              <TrackListItem\n                track={t}\n                key={t.id}\n                icon={\n                  <Checkbox\n                    id={t.id}\n                    checked={seedTracks.some((e) => e.id === t.id)}\n                    onCheckedChanged={(checked) =>\n                      handleCheckedChange(t, checked)\n                    }\n                  />\n                }\n              />\n            ))}\n          </div>\n        </div>\n        <div className={\"seed-tracks\"}>\n          {seedTracks.map((t) => (\n            <TrackListItem\n              track={t}\n              key={t.id}\n              icon={\n                <button\n                  className=\"seed-tracks-deselect\"\n                  onClick={() => handleCheckedChange(t, false)}\n                >\n                  <img src={CrossIcon} alt=\"cross icon\" />\n                </button>\n              }\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  seedTracks: state.seedTracks,\n  authentication: state.authentication,\n});\n\nexport default connect(mapStateToProps, { selectTrack, deselectTrack })(\n  SeedSelector\n);\n","import {\n  DESELECT_TRACK,\n  DeselectTrack,\n  RESET_TRACK_SELECTION,\n  ResetTrackSelection,\n  SELECT_TRACK,\n  SelectTrack\n} from \"./types\";\n\nexport function selectTrack(track: SpotifyApi.TrackObjectFull) : SelectTrack {\n  return {\n    type: SELECT_TRACK,\n    payload: track\n  }\n}\n\nexport function deselectTrack(id: string) : DeselectTrack {\n  return {\n    type: DESELECT_TRACK,\n    id\n  }\n}\n\nexport function resetTrackSelection() : ResetTrackSelection {\n  return {\n    type: RESET_TRACK_SELECTION\n  }\n}\n\n\n","\nexport type SeedTrackState = SpotifyApi.TrackObjectFull[];\n\nexport const SELECT_TRACK = \"SELECT_TRACK\";\nexport const DESELECT_TRACK = \"DESELECT_TRACK\";\nexport const RESET_TRACK_SELECTION = \"RESET_TRACK_SELECTION\";\n\nexport interface SelectTrack {\n  type: typeof SELECT_TRACK,\n  payload: SpotifyApi.TrackObjectFull\n}\n\nexport interface DeselectTrack {\n  type: typeof DESELECT_TRACK,\n  id: string\n}\n\nexport interface ResetTrackSelection {\n  type: typeof RESET_TRACK_SELECTION\n}\n\nexport type SeedTrackActions = SelectTrack | DeselectTrack | ResetTrackSelection","import React, { CSSProperties } from \"react\";\n\nimport \"./Mark.css\";\n\ninterface MarkProps {\n  width: number;\n  height: number;\n  offsetX: number;\n  railHeight: number;\n}\n\nconst makeStyle: (\n  width: number,\n  height: number,\n  offsetY: number,\n  railHeight: number\n) => CSSProperties = (width, height, railHeight, offsetX) => {\n  return {\n    width,\n    height,\n    position: \"relative\",\n    bottom: (height + railHeight) / 2,\n    left: offsetX,\n  };\n};\n\nconst Mark: React.FC<MarkProps> = ({ width, height, railHeight, offsetX }) => {\n  return (\n    <div\n      className=\"marker\"\n      style={makeStyle(width, height, railHeight, offsetX)}\n    />\n  );\n};\n\nexport default Mark;\n","import React, { useLayoutEffect, useRef } from \"react\";\n\nimport \"./VerticalSlider.css\";\nimport Mark from \"./Mark/Mark\";\nimport { setTimeout } from \"timers\";\n\nconst THUMB_WIDTH = 12;\nconst MARK_HEIGHT = 14;\nconst RESET_TIMEOUT = 100;\n\ninterface SliderProps {\n  id: string;\n  min: number;\n  max: number;\n  value: number;\n  step?: number;\n  markValues: number[];\n  onChange: (value: string) => void;\n}\n\nconst Slider: React.FC<SliderProps> = ({\n  id,\n  min,\n  max,\n  step,\n  value,\n  markValues,\n  onChange,\n}) => {\n  const [dimension, setDimension] = React.useState({\n    width: 0,\n    height: 0,\n  });\n\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  let movementTimer: ReturnType<typeof setTimeout> | null = null;\n\n  const updateDimensions = () => {\n    if (!inputRef.current) return;\n\n    setDimension({\n      width: inputRef.current.clientWidth,\n      height: inputRef.current.clientHeight,\n    });\n  };\n\n  useLayoutEffect(updateDimensions, []);\n\n  window.addEventListener(\"resize\", () => {\n    if (movementTimer) clearInterval(movementTimer);\n\n    movementTimer = setTimeout(updateDimensions, RESET_TIMEOUT);\n  });\n\n  const renderMarks = () => {\n    if (dimension === null) return [];\n    const markWidth = dimension.width / (markValues.length - 1);\n\n    return markValues.map((value, index) => {\n      const ratio = (value - min) / (max - min);\n      const currentHeight = markWidth * index;\n      const offset =\n        THUMB_WIDTH / 2 + ratio * dimension.width - ratio * THUMB_WIDTH;\n      return (\n        <Mark\n          key={index}\n          width={markWidth}\n          height={MARK_HEIGHT}\n          railHeight={dimension.height}\n          offsetX={offset - currentHeight}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"slider\">\n      <input\n        id={id}\n        value={value}\n        ref={inputRef}\n        className=\"slider-input\"\n        type=\"range\"\n        // @ts-ignore\n        min={min}\n        max={max}\n        onChange={(event) => onChange(event.target.value)}\n        step={step}\n      />\n      <div className=\"slider-tick-wrapper\">{renderMarks()}</div>\n    </div>\n  );\n};\n\nexport default Slider;\n","import React from \"react\";\n\nimport \"./Parameters.css\";\nimport Slider from \"../VerticalSlider/VerticalSlider\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../store\";\nimport { updateParameters } from \"../../store/parameter/actions\";\nimport { RecommendationParameters } from \"../../common/types\";\n\ninterface ParametersProps {\n  parameters: RecommendationParameters;\n  updateParameters: typeof updateParameters;\n}\n\nconst createDefaultParameters: () => RecommendationParameters = () => ({\n  tempoVariance: 10,\n  danceability: 0.5,\n  energy: 0.5,\n  popularity: 0.5,\n  valence: 0.5,\n});\n\nconst Parameters: React.FC<ParametersProps> = ({\n  parameters,\n  updateParameters,\n}) => {\n  const onParameterChange = (\n    prop: keyof RecommendationParameters,\n    value: number\n  ) => {\n    const newParams = createDefaultParameters();\n    Object.assign(newParams, parameters);\n    newParams[prop] = value;\n\n    updateParameters(newParams);\n  };\n\n  return (\n    <div className=\"parameter-section\">\n      <h2 className=\"section-title\">Step 3: Adjust parameters</h2>\n      <div className=\"parameters-surface\">\n        <div className=\"parameters-wrapper\">\n          <div className=\"parameter\">\n            <h4>Tempo variance</h4>\n            <Slider\n              id=\"1\"\n              min={2}\n              max={10}\n              step={2}\n              value={parameters.tempoVariance}\n              markValues={[2, 4, 6, 8, 10]}\n              onChange={(value) =>\n                onParameterChange(\"tempoVariance\", parseInt(value))\n              }\n            />\n          </div>\n          <div className=\"parameter\">\n            <h4>Danceability</h4>\n            <Slider\n              id=\"1\"\n              min={0}\n              max={1}\n              step={0.1}\n              value={parameters.danceability}\n              markValues={[0, 0.2, 0.4, 0.6, 0.8, 1]}\n              onChange={(value) =>\n                onParameterChange(\"danceability\", parseFloat(value))\n              }\n            />\n          </div>\n          <div className=\"parameter\">\n            <h4>Energy</h4>\n            <Slider\n              id=\"1\"\n              min={0}\n              max={1}\n              step={0.1}\n              value={parameters.energy}\n              markValues={[0, 0.2, 0.4, 0.6, 0.8, 1]}\n              onChange={(value) =>\n                onParameterChange(\"energy\", parseFloat(value))\n              }\n            />\n          </div>\n          <div className=\"parameter\">\n            <h4>Popularity</h4>\n            <Slider\n              id=\"1\"\n              min={0}\n              max={100}\n              step={10}\n              value={parameters.popularity}\n              markValues={[0, 20, 40, 60, 80, 100]}\n              onChange={(value) =>\n                onParameterChange(\"popularity\", parseInt(value))\n              }\n            />\n          </div>\n          <div className=\"parameter\">\n            <h4>Valence</h4>\n            <Slider\n              id=\"1\"\n              min={0}\n              max={1}\n              step={0.1}\n              value={parameters.valence}\n              markValues={[0, 0.2, 0.4, 0.6, 0.8, 1]}\n              onChange={(value) =>\n                onParameterChange(\"valence\", parseFloat(value))\n              }\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  parameters: state.parameters,\n});\n\nexport default connect(mapStateToProps, { updateParameters })(Parameters);\n","import {UPDATE_PARAMETERS, UpdateParameters} from \"./types\";\nimport {RecommendationParameters} from \"../../common/types\";\n\nexport function updateParameters(parameters: RecommendationParameters) : UpdateParameters {\n  return {\n    type: UPDATE_PARAMETERS,\n    payload: parameters\n  }\n}","import {RecommendationParameters} from \"../../common/types\";\n\n\nexport type ParameterState = RecommendationParameters;\n\nexport const UPDATE_PARAMETERS = \"UPDATE_PARAMETERS\";\n\nexport interface UpdateParameters {\n  type: typeof UPDATE_PARAMETERS,\n  payload: RecommendationParameters\n}\n\nexport type ParameterActions = UpdateParameters","import {RecommendationParameters} from \"../common/types\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nexport const generatePlaylist = async (tracks : SpotifyApi.TrackObjectFull[], parameters : RecommendationParameters, accessToken: string) : Promise<SpotifyApi.TrackObjectFull[]> => {\n\n  await new Promise(r => setTimeout(r, 5000));\n\n  const spotifyApi = new SpotifyWebApi();\n  spotifyApi.setAccessToken(accessToken);\n\n  const trackAnalyses = await spotifyApi.getAudioFeaturesForTracks(tracks.map(t => t.id));\n\n  if(trackAnalyses.audio_features.length !== tracks.length){\n    throw new Error(\"Unable to fetch audio features\");\n  }\n\n  const averageBpm = trackAnalyses.audio_features.reduce((acc: number, curr: SpotifyApi.AudioFeaturesObject) => acc + curr.tempo, 0) / trackAnalyses.audio_features.length;\n\n  const recommendationOptions : SpotifyApi.RecommendationsOptionsObject = {\n    seed_tracks: tracks.map(t => t.id),\n    //seed_artists: tracks.flatMap(t => t.artists.map(a => a.id)),\n    min_tempo: averageBpm - parameters.tempoVariance,\n    max_tempo: averageBpm + parameters.tempoVariance,\n    target_tempo: averageBpm,\n    target_danceability: parameters.danceability,\n    target_energy: parameters.energy,\n    target_popularity: parameters.popularity,\n    target_valence: parameters.valence\n  }\n\n  const recommendationResponse = await spotifyApi.getRecommendations(recommendationOptions);\n\n  if(recommendationResponse.tracks.length === 0)\n    return [];\n\n  const trackResponse = await spotifyApi.getTracks(recommendationResponse.tracks.map(t => t.id));\n\n  return trackResponse.tracks;\n}\n\nexport const addPlaylist = async (name: string, tracks: SpotifyApi.TrackObjectSimplified[], accessToken: string) => {\n\n  const spotifyApi = new SpotifyWebApi();\n  spotifyApi.setAccessToken(accessToken);\n\n  const user = await spotifyApi.getMe();\n\n  const response = await spotifyApi.createPlaylist(user.id, { description: \"Created with SpotifyPlaylistGenerator\", name: name});\n\n  await spotifyApi.addTracksToPlaylist(response.id, tracks.map(t => t.uri))\n}","import React from \"react\";\n\nimport \"./Playlist.css\";\n\nimport { AppState } from \"../../store\";\nimport TrackListItem from \"../TrackListItem/TrackListItem\";\nimport { connect } from \"react-redux\";\nimport { RecommendationParameters } from \"../../common/types\";\nimport { ParameterState } from \"../../store/parameter/types\";\nimport { AuthenticationState } from \"../../store/authentication/types\";\nimport { addPlaylist, generatePlaylist } from \"../../spotify/Spotify\";\n\ninterface PlaylistProps {\n  seedTracks: SpotifyApi.TrackObjectFull[];\n  parameters: ParameterState;\n  authentication: AuthenticationState;\n}\n\ninterface PlaylistState {\n  tracks: SpotifyApi.TrackObjectFull[];\n  parameters: RecommendationParameters | null;\n}\n\nconst Spinner = () => (\n  <div className=\"spinner\">\n    <div className=\"rect1\" />\n    <div className=\"rect2\" />\n    <div className=\"rect3\" />\n    <div className=\"rect4\" />\n    <div className=\"rect5\" />\n  </div>\n);\n\nconst Playlist: React.FC<PlaylistProps> = ({\n  seedTracks,\n  parameters,\n  authentication,\n}) => {\n  const [state, setState] = React.useState<PlaylistState>({\n    tracks: [],\n    parameters: null,\n  });\n\n  const [isGenerating, setGenerating] = React.useState(false);\n\n  const handleGenerateClicked = () => {\n    setGenerating(true);\n\n    generatePlaylist(seedTracks, parameters, authentication.accessToken)\n      .then((tracks) => {\n        setState({\n          tracks,\n          parameters,\n        });\n        setGenerating(false);\n      })\n      .catch(() => {\n        setState({\n          tracks: [],\n          parameters: null,\n        });\n        setGenerating(false);\n      });\n  };\n\n  const handleAddPlaylistClicked = () => {\n    const playlistName = window.prompt(\"Enter the name of the playlist\");\n\n    if (playlistName == null) return;\n\n    addPlaylist(playlistName, state.tracks, authentication.accessToken)\n      .then(() => {\n        alert(\"Successfully created the playlist\");\n      })\n      .catch(() => {\n        alert(\"Unable to create the playlist\");\n      });\n  };\n\n  const canGenerate = state.parameters !== parameters && seedTracks.length >= 3;\n  const canAddPlaylist = state.tracks.length > 0;\n\n  return (\n    <div className=\"playlist\">\n      <h2 className=\"section-title\">Step 4: Generate your playlist</h2>\n      <div className=\"playlist-controls\">\n        <button\n          className=\"spotify-button playlist-button\"\n          disabled={!canGenerate}\n          onClick={handleGenerateClicked}\n        >\n          Generate\n        </button>\n        <button\n          className=\"spotify-button playlist-button\"\n          disabled={!canAddPlaylist}\n          onClick={handleAddPlaylistClicked}\n        >\n          Add playlist\n        </button>\n      </div>\n      <div className=\"playlist-tracks\">\n        {isGenerating ? (\n          <Spinner />\n        ) : (\n          state.tracks.map((t) => <TrackListItem track={t} key={t.id} />)\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  seedTracks: state.seedTracks,\n  parameters: state.parameters,\n  authentication: state.authentication,\n});\n\nexport default connect(mapStateToProps, {})(Playlist);\n","import {AUTHENTICATION_SUCCESS, RESET_AUTHENTICATION, ResetAuthentication} from \"./types\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {Action} from \"redux\";\nimport {AppState} from \"../index\";\n\nexport const  authenticationSuccess = (accessToken: string, expiresIn: number) : ThunkAction<void, AppState, unknown, Action<string>> => dispatch => {\n  dispatch({\n    type: AUTHENTICATION_SUCCESS,\n    accessToken: accessToken\n  });\n\n  setTimeout(() => {\n    dispatch(resetAuthentication())\n  }, expiresIn * 1000)\n}\n\n\nexport function resetAuthentication() : ResetAuthentication {\n  return {\n    type: RESET_AUTHENTICATION\n  }\n}","\nexport interface AuthenticationState {\n  isAuthenticated: boolean;\n  accessToken: string;\n}\n\n\nexport const AUTHENTICATION_SUCCESS = \"AUTHENTICATION_SUCCESS\";\nexport const RESET_AUTHENTICATION = \"RESET_AUTHENTICATION\";\n\nexport interface AuthenticationSuccess {\n  type: typeof AUTHENTICATION_SUCCESS;\n  accessToken: string;\n}\n\n\nexport interface ResetAuthentication {\n  type: typeof RESET_AUTHENTICATION;\n}\n\nexport type AuthenticationActions = AuthenticationSuccess | ResetAuthentication;","export const toQuery = (params: Object) => {\n\n  const entries = Object.entries(params);\n\n  return entries.reduce<string>((query: string, entry : [string, any], index: number) => {\n\n    query += `${entry[0]}=${encodeURI(entry[1])}`;\n\n    if(index < entries.length - 1)\n      query += \"&\";\n\n    return query;\n  }, \"\");\n}\n\ninterface Params {\n  [key: string]: any;\n}\n\nexport const toParams = (paramString: string) : Params => {\n\n  return paramString.split(\"&\").reduce((acc : Params, curr: string) => {\n\n    const split = curr.split(\"=\");\n\n    if(split.length !== 2)\n      return acc;\n\n    acc[split[0]] = split[1];\n    return acc;\n  }, {})\n};","import React, { useEffect } from \"react\";\n\nimport \"./SpotifyLogin.css\";\nimport \"../App/App.css\";\n\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../store\";\nimport {\n  AuthenticationState,\n  AuthenticationSuccess,\n} from \"../../store/authentication/types\";\nimport { authenticationSuccess } from \"../../store/authentication/actions\";\nimport { toParams, toQuery } from \"../../common/utils\";\nimport { ThunkDispatch } from \"redux-thunk\";\n\nconst AUTHORIZATION_URL = \"https://accounts.spotify.com/authorize\";\n\ninterface SpotifyLoginProps {\n  clientId: string;\n  scopes: string[];\n  redirectUri: string;\n  authentication: AuthenticationState;\n  authenticationSuccess: (accessToken: string, expiresIn: number) => void;\n}\n\nconst SpotifyLogin: React.FC<SpotifyLoginProps> = ({\n  clientId,\n  scopes,\n  redirectUri,\n  authentication,\n  authenticationSuccess,\n}) => {\n  const handleLoginClicked = () => {\n    const params = {\n      client_id: clientId,\n      response_type: \"token\",\n      scope: scopes.join(\" \"),\n      redirect_uri: redirectUri,\n    };\n\n    window.location.href = AUTHORIZATION_URL + \"?\" + toQuery(params);\n  };\n\n  useEffect(() => {\n    const url = window.location.href;\n\n    const index = url.indexOf(\"#\");\n    if (index === -1) return;\n\n    const paramString = url.substring(index + 1);\n\n    const params = toParams(paramString);\n\n    if (!(\"access_token\" in params) || !(\"expires_in\" in params)) return;\n\n    window.history.replaceState(\n      null,\n      \"Playlist Generator\",\n      url.substring(0, index)\n    );\n\n    authenticationSuccess(\n      params[\"access_token\"],\n      parseInt(params[\"expires_in\"])\n    );\n    // eslint-disable-next-line\n  }, []);\n\n  const className = authentication.isAuthenticated ? \"hide\" : \"show\";\n\n  return (\n    <div className={\"spotify-login \" + className}>\n      <div className=\"spotify-login-title\">\n        <h1>Spotify playlist generator</h1>\n        <div className=\"spotify-login-content\">\n          <h2>Step 1: Login to spotify</h2>\n          <button\n            className=\"spotify-login-button spotify-button\"\n            onClick={handleLoginClicked}\n          >\n            Sign in with Spotify\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  authentication: state.authentication,\n});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<any, any, AuthenticationSuccess>\n) => ({\n  authenticationSuccess: (accessToken: string, expiresIn: number) =>\n    dispatch(authenticationSuccess(accessToken, expiresIn)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SpotifyLogin);\n","import React from \"react\";\n\nimport \"./App.css\";\n\nimport SeedSelector from \"../SeedSelector/SeedSelector\";\nimport Parameters from \"../Parameters/Parameters\";\nimport Playlist from \"../Playlist/Playlist\";\nimport SpotifyLogin from \"../SpotifyLogin/SpotifyLogin\";\n\nconst CLIENT_ID = \"9725f36404fa4862966e006f02481944\";\nconst SCOPES = [\"playlist-modify-public\"];\nconst REDIRECT_URI = \"https://tim-vu.github.io/PlaylistGenerator/\";\n\nconst App: React.FC = () => {\n  return (\n    <React.Fragment>\n      <SpotifyLogin\n        clientId={CLIENT_ID}\n        scopes={SCOPES}\n        redirectUri={REDIRECT_URI}\n      />\n      <div className=\"page\">\n        <div className=\"configuration\">\n          <SeedSelector />\n          <Parameters />\n        </div>\n        <Playlist />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import {DESELECT_TRACK, RESET_TRACK_SELECTION, SeedTrackActions, SeedTrackState, SELECT_TRACK} from \"./types\";\n\nconst initialState : SeedTrackState = [];\n\nexport function seedTrackReducer(state = initialState, action : SeedTrackActions) : SeedTrackState {\n  switch(action.type){\n    case SELECT_TRACK:\n      return [...state, action.payload];\n    case DESELECT_TRACK:\n      return state.filter(track => track.id !== action.id);\n    case RESET_TRACK_SELECTION:\n      return [];\n    default:\n      return state;\n  }\n}","import {ParameterActions, ParameterState} from \"./types\";\n\nconst initialState : ParameterState = {\n  danceability: 10,\n  energy: 0.5,\n  popularity: 50,\n  tempoVariance: 0.5,\n  valence: 0.5\n}\n\nexport function parameterReducer(state = initialState, action : ParameterActions) : ParameterState  {\n  switch (action.type) {\n    case \"UPDATE_PARAMETERS\":\n      return action.payload;\n    default:\n      return state;\n  }\n}","import {AuthenticationActions, AuthenticationState} from \"./types\";\n\nconst initialState : AuthenticationState = {\n  isAuthenticated: false,\n  accessToken: \"\"\n}\n\nexport function authenticationReducer(state = initialState, action: AuthenticationActions) : AuthenticationState {\n  switch (action.type) {\n    case \"RESET_AUTHENTICATION\":\n      return {\n        isAuthenticated: false,\n        accessToken: \"\"\n      }\n    case \"AUTHENTICATION_SUCCESS\":\n      return {\n        isAuthenticated: true,\n        accessToken: action.accessToken\n      };\n    default:\n      return state;\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {seedTrackReducer} from \"./seedtrack/reducers\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {parameterReducer} from \"./parameter/reducers\";\nimport {authenticationReducer} from \"./authentication/reducers\";\n\nconst rootReducer = combineReducers({\n  seedTracks: seedTrackReducer,\n  parameters: parameterReducer,\n  authentication: authenticationReducer\n})\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport default function configureStore() {\n  const middlewares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  return createStore(rootReducer, composeWithDevTools(middlewareEnhancer));\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\n\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}